 with base as (
SELECT dm.uuid as restaurant_uuid, dm.primary_contact_email as email, 'Primary_contact_email' as mtype, dm.store_name,
date_diff('day',  DATE(dm.first_order_timestamp_local), CURRENT_DATE) as days_after_ft
FROM eds.dim_merchant dm 
JOIN dwh.dim_city dc on dm.city_id = dc.city_id
--JOIN eats_salesops.res_fact d ON DM.UUID = D.restaurant_uuid
LEFT JOIN secure_kirby_external_data.salesforce_eats_account acc_st ON acc_st.uuid__c = dm.uuid
 LEFT JOIN secure_kirby_external_data.salesforce_eats_account acc_pl ON acc_pl.id = acc_st.parentid
WHERE 1=1
AND dm.is_visible = TRUE
AND dm.status = 'ACTIVE'
AND dm.is_test_account = FALSE
AND dm.location_type<>'DELIVERY_API'
AND dc.country_id IN (1,10,32,126)

AND dm.primary_contact_email NOT IN (

SELECT event.email_address
from euclid.crmmarketing_email_sendjob send
    join euclid.crmmarketing_eventlog event on event.send_id = send.send_id and event.report_date = send.report_date
    WHERE  send.email_name in (
     'rcrm_apac_anz_merchants_AdsAdoption_MU_ELC_Ads_Edu_EM2',
'rcrm_apac_anz_merchants_AdsAdoption_MU_ELC_Ads_Edu_EM5B',
'rcrm_apac_anz_merchants_AdsAdoption_MU_ELC_Ads_Edu_EM4',
'rcrm_apac_anz_merchants_AdsAdoption_MU_ELC_Ads_Edu_EM6',
'rcrm_apac_anz_merchants_AdsAdoption_MU_ELC_Ads_Edu_EM3',
'rcrm_apac_anz_merchants_AdsAdoption_MU_ELC_Ads_Edu_EM1',
'rcrm_apac_anz_merchants_AdsAdoption_MU_ELC_Ads_Edu_EM5')

)
AND dm.uuid  NOT IN 
(
SELECT 
DISTINCT 
ADS.restaurant_uuid
FROM ads.ads_metrics_daily_utc ads 
WHERE 1 = 1
AND SPEND_USD> 0 AND spend_local> 0
)

AND acc_pl.named_account__c like '%SMB%'
--AND  date_diff('day',  DATE(d.first_trip_date), CURRENT_DATE) >= 28  

),

multilocation as (
  SELECT
    lower(email) as email,
    count(*) as locations
  FROM
    base
  GROUP BY
    1
),


conversion AS (
SELECT 
 rfs.restaurant_uuid, 
 ROUND(AVG(n_sessions_any_impression),0) AS AVG_Views,
 SUM(n_sessions_menu_impression) AS Total_Eaters
FROM eds.agg_restaurant_funnel rfs
JOIN base b ON rfs.restaurant_uuid = b.restaurant_uuid
WHERE DATE(datestr) >= CURRENT_DATE - INTERVAL '30' DAY
GROUP BY 1),

ads as (
SELECT 
 ads.restaurant_uuid,
 case when SUM(spend_local) > 0 then TRUE ELSE FALSE END AS ads_available
FROM ads.ads_metrics_daily_utc ads 
JOIN base b on b.restaurant_uuid = ads.restaurant_uuid
WHERE 1 = 1
AND CAST(datestr AS DATE) >= CURRENT_DATE - INTERVAL '30' DAY
GROUP BY 1
HAVING SUM(spend_local) > 0
),

offers as (
SELECT DISTINCT rpm.restaurant_uuid, rpm.num_redemptions,
 CASE WHEN rpm.promotion_type = 'BOGO' THEN 'Buy One Get One'
      WHEN rpm.promotion_type = 'DISCOUNTEDITEM' THEN 'Discounted Item'
      WHEN rpm.promotion_type = 'FLAT' THEN ''
      WHEN rpm.promotion_type = 'PERCENTAGE' THEN ''
      WHEN rpm.promotion_type = 'FREEITEM' THEN 'Free Item'
      WHEN rpm.promotion_type = 'FREEDELIVERY' THEN 'Free Delivery'
   ELSE rpm.promotion_type
  END AS promotion_type,
 DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.start_at/1000))) AS DATE)) AS start_date,
 DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.end_at/1000))) AS DATE)) AS end_date,
 CASE WHEN CURRENT_DATE > DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.start_at/1000))) AS DATE)) 
 AND CURRENT_DATE < DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.end_at/1000))) AS DATE)) 
 THEN 'True'
 ELSE 'False'
 END AS camp_date,
 ROW_NUMBER() OVER (PARTITION BY rpm.restaurant_uuid ORDER BY rpm.num_redemptions DESC) AS RowNum
FROM offers.restaurant_promo_metrics_latest rpm
JOIN base r on r.restaurant_uuid = rpm.restaurant_uuid
WHERE (CASE WHEN CURRENT_DATE > DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.start_at/1000))) AS DATE)) 
 AND CURRENT_DATE < DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.end_at/1000))) AS DATE)) 
 THEN 'True'
 ELSE 'False'
 END) = 'True'
GROUP BY 1, 2, 3, 4, DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.start_at/1000))) AS DATE)),
DATE_TRUNC('day', CAST(DATE((FROM_UNIXTIME(rpm.end_at/1000))) AS DATE))
),

orders as (
SELECT restaurant_uuid, sum(orders) as orders
FROM ads.ads_campaign_metrics_daily_utc
WHERE CAST(datestr AS DATE) >= CURRENT_DATE - INTERVAL '30' DAY
GROUP BY 1
),

roas as (
SELECT ds.restaurant_uuid, 
COALESCE(TRY(sum(ds.revenue_usd*1.0)/sum(ds.spend_usd) ), NULL)  as roas_with_ads_table, 
COALESCE(TRY(sum(ds.exposed_revenue_usd*1.0)/sum(ds.spend_usd) ), NULL) as exposed_roas_with_ads_table
FROM ads.ads_metrics_daily_utc ds
JOIN base b ON ds.restaurant_uuid = b.restaurant_uuid
GROUP BY 1
)
,
smry as
(
SELECT b.restaurant_uuid,CASE
    WHEN ml.locations > 1
    then TRUE
    ELSE FALSE
  END AS multilocation_flag, b.days_after_ft
,TO_MD5_MOD(CONCAT('elc_ad_adoption_campaign',b.restaurant_uuid,'.',b.email), 100) as bucket_id 
FROM base b
LEFT JOIN conversion cn ON cn.restaurant_uuid = b.restaurant_uuid
LEFT JOIN ads ad ON ad.restaurant_uuid = b.restaurant_uuid
LEFT JOIN offers off ON off.restaurant_uuid = b.restaurant_uuid and  off.RowNum = 1
LEFT JOIN orders ord ON ord.restaurant_uuid = b.restaurant_uuid
LEFT JOIN roas ro ON ro.restaurant_uuid = b.restaurant_uuid
LEFT JOIN multilocation ml  on ml.email = b.email
)

select 
'elc_ad_adoption_campaign' as experiment_key
,case when bucket_id BETWEEN 0 and 49 then 'Control' else 'Variant1' end as treatment_group_key
,*
from
    smry
where
    days_after_ft BETWEEN 28 and 120
AND multilocation_flag = FALSE 
